//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RFIDIntegratedApplication.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConnectResponse", Namespace="http://schemas.datacontract.org/2004/07/ImpinjControl")]
    [System.SerializableAttribute()]
    public partial class ConnectResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RFIDIntegratedApplication.ServiceReference1.AntennaConfiguration antennaConfigurationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RFIDIntegratedApplication.ServiceReference1.ROReportSpec rOReportSpecField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private RFIDIntegratedApplication.ServiceReference1.ReaderCapabilities readerCapabilitiesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RFIDIntegratedApplication.ServiceReference1.AntennaConfiguration antennaConfiguration {
            get {
                return this.antennaConfigurationField;
            }
            set {
                if ((object.ReferenceEquals(this.antennaConfigurationField, value) != true)) {
                    this.antennaConfigurationField = value;
                    this.RaisePropertyChanged("antennaConfiguration");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RFIDIntegratedApplication.ServiceReference1.ROReportSpec rOReportSpec {
            get {
                return this.rOReportSpecField;
            }
            set {
                if ((object.ReferenceEquals(this.rOReportSpecField, value) != true)) {
                    this.rOReportSpecField = value;
                    this.RaisePropertyChanged("rOReportSpec");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RFIDIntegratedApplication.ServiceReference1.ReaderCapabilities readerCapabilities {
            get {
                return this.readerCapabilitiesField;
            }
            set {
                if ((object.ReferenceEquals(this.readerCapabilitiesField, value) != true)) {
                    this.readerCapabilitiesField = value;
                    this.RaisePropertyChanged("readerCapabilities");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AntennaConfiguration", Namespace="http://schemas.datacontract.org/2004/07/ImpinjControl")]
    [System.SerializableAttribute()]
    public partial class AntennaConfiguration : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool[] AntennaConnectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort[] AntennaIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort ChannelIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort EmptyFieldTimeoutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort FieldPingIntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Org.LLRP.LTK.LLRPV1.DataType.UInt16Array FixedChannelListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FixedFrequencyModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double FrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Org.LLRP.LTK.LLRPV1.DataType.UInt16Array FrequencyHopListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort HopTableIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HoppingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort HoppingStepField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool LowDutyCycleModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort MaxNumberOfAntennaSupportedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort ModeIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort NumberOfAntennaConnectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Org.LLRP.LTK.LLRPV1.DataType.UInt16Array ReducedPowerChannelListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ReducedPowerFrequencyModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short[] SelectedReceiverSensitivityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort[] SelectedReceiverSensitivityIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SelectedSearchModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SelectedSessionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort SelectedSessionIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double[] SelectedTransmiterPowerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort[] SelectedTransmiterPowerIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool TagInventoryStateAwareField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort TagPopulationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort TagTransitTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort TariField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string extraMaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string maskField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool[] AntennaConnected {
            get {
                return this.AntennaConnectedField;
            }
            set {
                if ((object.ReferenceEquals(this.AntennaConnectedField, value) != true)) {
                    this.AntennaConnectedField = value;
                    this.RaisePropertyChanged("AntennaConnected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort[] AntennaID {
            get {
                return this.AntennaIDField;
            }
            set {
                if ((object.ReferenceEquals(this.AntennaIDField, value) != true)) {
                    this.AntennaIDField = value;
                    this.RaisePropertyChanged("AntennaID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort ChannelIndex {
            get {
                return this.ChannelIndexField;
            }
            set {
                if ((this.ChannelIndexField.Equals(value) != true)) {
                    this.ChannelIndexField = value;
                    this.RaisePropertyChanged("ChannelIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort EmptyFieldTimeout {
            get {
                return this.EmptyFieldTimeoutField;
            }
            set {
                if ((this.EmptyFieldTimeoutField.Equals(value) != true)) {
                    this.EmptyFieldTimeoutField = value;
                    this.RaisePropertyChanged("EmptyFieldTimeout");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort FieldPingInterval {
            get {
                return this.FieldPingIntervalField;
            }
            set {
                if ((this.FieldPingIntervalField.Equals(value) != true)) {
                    this.FieldPingIntervalField = value;
                    this.RaisePropertyChanged("FieldPingInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Org.LLRP.LTK.LLRPV1.DataType.UInt16Array FixedChannelList {
            get {
                return this.FixedChannelListField;
            }
            set {
                if ((object.ReferenceEquals(this.FixedChannelListField, value) != true)) {
                    this.FixedChannelListField = value;
                    this.RaisePropertyChanged("FixedChannelList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FixedFrequencyMode {
            get {
                return this.FixedFrequencyModeField;
            }
            set {
                if ((object.ReferenceEquals(this.FixedFrequencyModeField, value) != true)) {
                    this.FixedFrequencyModeField = value;
                    this.RaisePropertyChanged("FixedFrequencyMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Frequency {
            get {
                return this.FrequencyField;
            }
            set {
                if ((this.FrequencyField.Equals(value) != true)) {
                    this.FrequencyField = value;
                    this.RaisePropertyChanged("Frequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Org.LLRP.LTK.LLRPV1.DataType.UInt16Array FrequencyHopList {
            get {
                return this.FrequencyHopListField;
            }
            set {
                if ((object.ReferenceEquals(this.FrequencyHopListField, value) != true)) {
                    this.FrequencyHopListField = value;
                    this.RaisePropertyChanged("FrequencyHopList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort HopTableID {
            get {
                return this.HopTableIDField;
            }
            set {
                if ((this.HopTableIDField.Equals(value) != true)) {
                    this.HopTableIDField = value;
                    this.RaisePropertyChanged("HopTableID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Hopping {
            get {
                return this.HoppingField;
            }
            set {
                if ((this.HoppingField.Equals(value) != true)) {
                    this.HoppingField = value;
                    this.RaisePropertyChanged("Hopping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort HoppingStep {
            get {
                return this.HoppingStepField;
            }
            set {
                if ((this.HoppingStepField.Equals(value) != true)) {
                    this.HoppingStepField = value;
                    this.RaisePropertyChanged("HoppingStep");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool LowDutyCycleMode {
            get {
                return this.LowDutyCycleModeField;
            }
            set {
                if ((this.LowDutyCycleModeField.Equals(value) != true)) {
                    this.LowDutyCycleModeField = value;
                    this.RaisePropertyChanged("LowDutyCycleMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort MaxNumberOfAntennaSupported {
            get {
                return this.MaxNumberOfAntennaSupportedField;
            }
            set {
                if ((this.MaxNumberOfAntennaSupportedField.Equals(value) != true)) {
                    this.MaxNumberOfAntennaSupportedField = value;
                    this.RaisePropertyChanged("MaxNumberOfAntennaSupported");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort ModeIndex {
            get {
                return this.ModeIndexField;
            }
            set {
                if ((this.ModeIndexField.Equals(value) != true)) {
                    this.ModeIndexField = value;
                    this.RaisePropertyChanged("ModeIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort NumberOfAntennaConnected {
            get {
                return this.NumberOfAntennaConnectedField;
            }
            set {
                if ((this.NumberOfAntennaConnectedField.Equals(value) != true)) {
                    this.NumberOfAntennaConnectedField = value;
                    this.RaisePropertyChanged("NumberOfAntennaConnected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Org.LLRP.LTK.LLRPV1.DataType.UInt16Array ReducedPowerChannelList {
            get {
                return this.ReducedPowerChannelListField;
            }
            set {
                if ((object.ReferenceEquals(this.ReducedPowerChannelListField, value) != true)) {
                    this.ReducedPowerChannelListField = value;
                    this.RaisePropertyChanged("ReducedPowerChannelList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ReducedPowerFrequencyMode {
            get {
                return this.ReducedPowerFrequencyModeField;
            }
            set {
                if ((this.ReducedPowerFrequencyModeField.Equals(value) != true)) {
                    this.ReducedPowerFrequencyModeField = value;
                    this.RaisePropertyChanged("ReducedPowerFrequencyMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short[] SelectedReceiverSensitivity {
            get {
                return this.SelectedReceiverSensitivityField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedReceiverSensitivityField, value) != true)) {
                    this.SelectedReceiverSensitivityField = value;
                    this.RaisePropertyChanged("SelectedReceiverSensitivity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort[] SelectedReceiverSensitivityIndex {
            get {
                return this.SelectedReceiverSensitivityIndexField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedReceiverSensitivityIndexField, value) != true)) {
                    this.SelectedReceiverSensitivityIndexField = value;
                    this.RaisePropertyChanged("SelectedReceiverSensitivityIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SelectedSearchMode {
            get {
                return this.SelectedSearchModeField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedSearchModeField, value) != true)) {
                    this.SelectedSearchModeField = value;
                    this.RaisePropertyChanged("SelectedSearchMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SelectedSession {
            get {
                return this.SelectedSessionField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedSessionField, value) != true)) {
                    this.SelectedSessionField = value;
                    this.RaisePropertyChanged("SelectedSession");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort SelectedSessionIndex {
            get {
                return this.SelectedSessionIndexField;
            }
            set {
                if ((this.SelectedSessionIndexField.Equals(value) != true)) {
                    this.SelectedSessionIndexField = value;
                    this.RaisePropertyChanged("SelectedSessionIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double[] SelectedTransmiterPower {
            get {
                return this.SelectedTransmiterPowerField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedTransmiterPowerField, value) != true)) {
                    this.SelectedTransmiterPowerField = value;
                    this.RaisePropertyChanged("SelectedTransmiterPower");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort[] SelectedTransmiterPowerIndex {
            get {
                return this.SelectedTransmiterPowerIndexField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedTransmiterPowerIndexField, value) != true)) {
                    this.SelectedTransmiterPowerIndexField = value;
                    this.RaisePropertyChanged("SelectedTransmiterPowerIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool TagInventoryStateAware {
            get {
                return this.TagInventoryStateAwareField;
            }
            set {
                if ((this.TagInventoryStateAwareField.Equals(value) != true)) {
                    this.TagInventoryStateAwareField = value;
                    this.RaisePropertyChanged("TagInventoryStateAware");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort TagPopulation {
            get {
                return this.TagPopulationField;
            }
            set {
                if ((this.TagPopulationField.Equals(value) != true)) {
                    this.TagPopulationField = value;
                    this.RaisePropertyChanged("TagPopulation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort TagTransitTime {
            get {
                return this.TagTransitTimeField;
            }
            set {
                if ((this.TagTransitTimeField.Equals(value) != true)) {
                    this.TagTransitTimeField = value;
                    this.RaisePropertyChanged("TagTransitTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort Tari {
            get {
                return this.TariField;
            }
            set {
                if ((this.TariField.Equals(value) != true)) {
                    this.TariField = value;
                    this.RaisePropertyChanged("Tari");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string extraMask {
            get {
                return this.extraMaskField;
            }
            set {
                if ((object.ReferenceEquals(this.extraMaskField, value) != true)) {
                    this.extraMaskField = value;
                    this.RaisePropertyChanged("extraMask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string mask {
            get {
                return this.maskField;
            }
            set {
                if ((object.ReferenceEquals(this.maskField, value) != true)) {
                    this.maskField = value;
                    this.RaisePropertyChanged("mask");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ROReportSpec", Namespace="http://schemas.datacontract.org/2004/07/ImpinjControl")]
    [System.SerializableAttribute()]
    public partial class ROReportSpec : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableAccessSpecIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableAntennaIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableCRCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableChannelIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableFirstSeenTimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableInventoryParameterSPecIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableLastSeenTimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnablePCbitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnablePeakRSSIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableROSpecIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableSpecIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableTagSeenCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ImpinJEnableGPSCoordinatesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ImpinJEnableOptimizedReadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ImpinJEnablePeakRSSIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ImpinJEnableRFDopplerFrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ImpinJEnableRFPhaseAngleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool ImpinJEnableSerializedTIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort ROReportTriggerNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SelectedROReportTriggerField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableAccessSpecID {
            get {
                return this.EnableAccessSpecIDField;
            }
            set {
                if ((this.EnableAccessSpecIDField.Equals(value) != true)) {
                    this.EnableAccessSpecIDField = value;
                    this.RaisePropertyChanged("EnableAccessSpecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableAntennaID {
            get {
                return this.EnableAntennaIDField;
            }
            set {
                if ((this.EnableAntennaIDField.Equals(value) != true)) {
                    this.EnableAntennaIDField = value;
                    this.RaisePropertyChanged("EnableAntennaID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableCRC {
            get {
                return this.EnableCRCField;
            }
            set {
                if ((this.EnableCRCField.Equals(value) != true)) {
                    this.EnableCRCField = value;
                    this.RaisePropertyChanged("EnableCRC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableChannelIndex {
            get {
                return this.EnableChannelIndexField;
            }
            set {
                if ((this.EnableChannelIndexField.Equals(value) != true)) {
                    this.EnableChannelIndexField = value;
                    this.RaisePropertyChanged("EnableChannelIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableFirstSeenTimestamp {
            get {
                return this.EnableFirstSeenTimestampField;
            }
            set {
                if ((this.EnableFirstSeenTimestampField.Equals(value) != true)) {
                    this.EnableFirstSeenTimestampField = value;
                    this.RaisePropertyChanged("EnableFirstSeenTimestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableInventoryParameterSPecID {
            get {
                return this.EnableInventoryParameterSPecIDField;
            }
            set {
                if ((this.EnableInventoryParameterSPecIDField.Equals(value) != true)) {
                    this.EnableInventoryParameterSPecIDField = value;
                    this.RaisePropertyChanged("EnableInventoryParameterSPecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableLastSeenTimestamp {
            get {
                return this.EnableLastSeenTimestampField;
            }
            set {
                if ((this.EnableLastSeenTimestampField.Equals(value) != true)) {
                    this.EnableLastSeenTimestampField = value;
                    this.RaisePropertyChanged("EnableLastSeenTimestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnablePCbits {
            get {
                return this.EnablePCbitsField;
            }
            set {
                if ((this.EnablePCbitsField.Equals(value) != true)) {
                    this.EnablePCbitsField = value;
                    this.RaisePropertyChanged("EnablePCbits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnablePeakRSSI {
            get {
                return this.EnablePeakRSSIField;
            }
            set {
                if ((this.EnablePeakRSSIField.Equals(value) != true)) {
                    this.EnablePeakRSSIField = value;
                    this.RaisePropertyChanged("EnablePeakRSSI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableROSpecID {
            get {
                return this.EnableROSpecIDField;
            }
            set {
                if ((this.EnableROSpecIDField.Equals(value) != true)) {
                    this.EnableROSpecIDField = value;
                    this.RaisePropertyChanged("EnableROSpecID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableSpecIndex {
            get {
                return this.EnableSpecIndexField;
            }
            set {
                if ((this.EnableSpecIndexField.Equals(value) != true)) {
                    this.EnableSpecIndexField = value;
                    this.RaisePropertyChanged("EnableSpecIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableTagSeenCount {
            get {
                return this.EnableTagSeenCountField;
            }
            set {
                if ((this.EnableTagSeenCountField.Equals(value) != true)) {
                    this.EnableTagSeenCountField = value;
                    this.RaisePropertyChanged("EnableTagSeenCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ImpinJEnableGPSCoordinates {
            get {
                return this.ImpinJEnableGPSCoordinatesField;
            }
            set {
                if ((this.ImpinJEnableGPSCoordinatesField.Equals(value) != true)) {
                    this.ImpinJEnableGPSCoordinatesField = value;
                    this.RaisePropertyChanged("ImpinJEnableGPSCoordinates");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ImpinJEnableOptimizedRead {
            get {
                return this.ImpinJEnableOptimizedReadField;
            }
            set {
                if ((this.ImpinJEnableOptimizedReadField.Equals(value) != true)) {
                    this.ImpinJEnableOptimizedReadField = value;
                    this.RaisePropertyChanged("ImpinJEnableOptimizedRead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ImpinJEnablePeakRSSI {
            get {
                return this.ImpinJEnablePeakRSSIField;
            }
            set {
                if ((this.ImpinJEnablePeakRSSIField.Equals(value) != true)) {
                    this.ImpinJEnablePeakRSSIField = value;
                    this.RaisePropertyChanged("ImpinJEnablePeakRSSI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ImpinJEnableRFDopplerFrequency {
            get {
                return this.ImpinJEnableRFDopplerFrequencyField;
            }
            set {
                if ((this.ImpinJEnableRFDopplerFrequencyField.Equals(value) != true)) {
                    this.ImpinJEnableRFDopplerFrequencyField = value;
                    this.RaisePropertyChanged("ImpinJEnableRFDopplerFrequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ImpinJEnableRFPhaseAngle {
            get {
                return this.ImpinJEnableRFPhaseAngleField;
            }
            set {
                if ((this.ImpinJEnableRFPhaseAngleField.Equals(value) != true)) {
                    this.ImpinJEnableRFPhaseAngleField = value;
                    this.RaisePropertyChanged("ImpinJEnableRFPhaseAngle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool ImpinJEnableSerializedTID {
            get {
                return this.ImpinJEnableSerializedTIDField;
            }
            set {
                if ((this.ImpinJEnableSerializedTIDField.Equals(value) != true)) {
                    this.ImpinJEnableSerializedTIDField = value;
                    this.RaisePropertyChanged("ImpinJEnableSerializedTID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort ROReportTriggerN {
            get {
                return this.ROReportTriggerNField;
            }
            set {
                if ((this.ROReportTriggerNField.Equals(value) != true)) {
                    this.ROReportTriggerNField = value;
                    this.RaisePropertyChanged("ROReportTriggerN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SelectedROReportTrigger {
            get {
                return this.SelectedROReportTriggerField;
            }
            set {
                if ((object.ReferenceEquals(this.SelectedROReportTriggerField, value) != true)) {
                    this.SelectedROReportTriggerField = value;
                    this.RaisePropertyChanged("SelectedROReportTrigger");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReaderCapabilities", Namespace="http://schemas.datacontract.org/2004/07/ImpinjControl")]
    [System.SerializableAttribute()]
    public partial class ReaderCapabilities : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] FixedFrequencyModeTableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<ushort, double> FrequencyDicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort MaxNumberOfAntennaSupportedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, ushort> PreDefinedModeTableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ROReportTriggerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<short, ushort> ReceiveSensitivityDicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] SearchModeTableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, ushort> SessionsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort[] SupportedModeIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<double, ushort> TransmiterPowerDicField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] FixedFrequencyModeTable {
            get {
                return this.FixedFrequencyModeTableField;
            }
            set {
                if ((object.ReferenceEquals(this.FixedFrequencyModeTableField, value) != true)) {
                    this.FixedFrequencyModeTableField = value;
                    this.RaisePropertyChanged("FixedFrequencyModeTable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<ushort, double> FrequencyDic {
            get {
                return this.FrequencyDicField;
            }
            set {
                if ((object.ReferenceEquals(this.FrequencyDicField, value) != true)) {
                    this.FrequencyDicField = value;
                    this.RaisePropertyChanged("FrequencyDic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort MaxNumberOfAntennaSupported {
            get {
                return this.MaxNumberOfAntennaSupportedField;
            }
            set {
                if ((this.MaxNumberOfAntennaSupportedField.Equals(value) != true)) {
                    this.MaxNumberOfAntennaSupportedField = value;
                    this.RaisePropertyChanged("MaxNumberOfAntennaSupported");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, ushort> PreDefinedModeTable {
            get {
                return this.PreDefinedModeTableField;
            }
            set {
                if ((object.ReferenceEquals(this.PreDefinedModeTableField, value) != true)) {
                    this.PreDefinedModeTableField = value;
                    this.RaisePropertyChanged("PreDefinedModeTable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ROReportTrigger {
            get {
                return this.ROReportTriggerField;
            }
            set {
                if ((object.ReferenceEquals(this.ROReportTriggerField, value) != true)) {
                    this.ROReportTriggerField = value;
                    this.RaisePropertyChanged("ROReportTrigger");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<short, ushort> ReceiveSensitivityDic {
            get {
                return this.ReceiveSensitivityDicField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiveSensitivityDicField, value) != true)) {
                    this.ReceiveSensitivityDicField = value;
                    this.RaisePropertyChanged("ReceiveSensitivityDic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] SearchModeTable {
            get {
                return this.SearchModeTableField;
            }
            set {
                if ((object.ReferenceEquals(this.SearchModeTableField, value) != true)) {
                    this.SearchModeTableField = value;
                    this.RaisePropertyChanged("SearchModeTable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, ushort> Sessions {
            get {
                return this.SessionsField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionsField, value) != true)) {
                    this.SessionsField = value;
                    this.RaisePropertyChanged("Sessions");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort[] SupportedModeIndex {
            get {
                return this.SupportedModeIndexField;
            }
            set {
                if ((object.ReferenceEquals(this.SupportedModeIndexField, value) != true)) {
                    this.SupportedModeIndexField = value;
                    this.RaisePropertyChanged("SupportedModeIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<double, ushort> TransmiterPowerDic {
            get {
                return this.TransmiterPowerDicField;
            }
            set {
                if ((object.ReferenceEquals(this.TransmiterPowerDicField, value) != true)) {
                    this.TransmiterPowerDicField = value;
                    this.RaisePropertyChanged("TransmiterPowerDic");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TagInfo", Namespace="http://schemas.datacontract.org/2004/07/ImpinjControl")]
    [System.SerializableAttribute()]
    public partial class TagInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double AcutalPhaseInRadianField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort AntennaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort ChannelIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DopplerShiftField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EPCField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong FirstSeenTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FrequencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong LastSeenTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double RSSIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ushort RawPhaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TagSeenCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ulong TimeStampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalTagCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TxPowerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double VelocityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AcutalPhaseInRadian {
            get {
                return this.AcutalPhaseInRadianField;
            }
            set {
                if ((this.AcutalPhaseInRadianField.Equals(value) != true)) {
                    this.AcutalPhaseInRadianField = value;
                    this.RaisePropertyChanged("AcutalPhaseInRadian");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort Antenna {
            get {
                return this.AntennaField;
            }
            set {
                if ((this.AntennaField.Equals(value) != true)) {
                    this.AntennaField = value;
                    this.RaisePropertyChanged("Antenna");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort ChannelIndex {
            get {
                return this.ChannelIndexField;
            }
            set {
                if ((this.ChannelIndexField.Equals(value) != true)) {
                    this.ChannelIndexField = value;
                    this.RaisePropertyChanged("ChannelIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DopplerShift {
            get {
                return this.DopplerShiftField;
            }
            set {
                if ((this.DopplerShiftField.Equals(value) != true)) {
                    this.DopplerShiftField = value;
                    this.RaisePropertyChanged("DopplerShift");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EPC {
            get {
                return this.EPCField;
            }
            set {
                if ((object.ReferenceEquals(this.EPCField, value) != true)) {
                    this.EPCField = value;
                    this.RaisePropertyChanged("EPC");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong FirstSeenTime {
            get {
                return this.FirstSeenTimeField;
            }
            set {
                if ((this.FirstSeenTimeField.Equals(value) != true)) {
                    this.FirstSeenTimeField = value;
                    this.RaisePropertyChanged("FirstSeenTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Frequency {
            get {
                return this.FrequencyField;
            }
            set {
                if ((this.FrequencyField.Equals(value) != true)) {
                    this.FrequencyField = value;
                    this.RaisePropertyChanged("Frequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong LastSeenTime {
            get {
                return this.LastSeenTimeField;
            }
            set {
                if ((this.LastSeenTimeField.Equals(value) != true)) {
                    this.LastSeenTimeField = value;
                    this.RaisePropertyChanged("LastSeenTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double RSSI {
            get {
                return this.RSSIField;
            }
            set {
                if ((this.RSSIField.Equals(value) != true)) {
                    this.RSSIField = value;
                    this.RaisePropertyChanged("RSSI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ushort RawPhase {
            get {
                return this.RawPhaseField;
            }
            set {
                if ((this.RawPhaseField.Equals(value) != true)) {
                    this.RawPhaseField = value;
                    this.RaisePropertyChanged("RawPhase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TagSeenCount {
            get {
                return this.TagSeenCountField;
            }
            set {
                if ((this.TagSeenCountField.Equals(value) != true)) {
                    this.TagSeenCountField = value;
                    this.RaisePropertyChanged("TagSeenCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ulong TimeStamp {
            get {
                return this.TimeStampField;
            }
            set {
                if ((this.TimeStampField.Equals(value) != true)) {
                    this.TimeStampField = value;
                    this.RaisePropertyChanged("TimeStamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TotalTagCount {
            get {
                return this.TotalTagCountField;
            }
            set {
                if ((this.TotalTagCountField.Equals(value) != true)) {
                    this.TotalTagCountField = value;
                    this.RaisePropertyChanged("TotalTagCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TxPower {
            get {
                return this.TxPowerField;
            }
            set {
                if ((this.TxPowerField.Equals(value) != true)) {
                    this.TxPowerField = value;
                    this.RaisePropertyChanged("TxPower");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Velocity {
            get {
                return this.VelocityField;
            }
            set {
                if ((this.VelocityField.Equals(value) != true)) {
                    this.VelocityField = value;
                    this.RaisePropertyChanged("Velocity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IImpinjControlService")]
    public interface IImpinjControlService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpinjControlService/connect", ReplyAction="http://tempuri.org/IImpinjControlService/connectResponse")]
        RFIDIntegratedApplication.ServiceReference1.ConnectResponse connect(string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpinjControlService/connect", ReplyAction="http://tempuri.org/IImpinjControlService/connectResponse")]
        System.Threading.Tasks.Task<RFIDIntegratedApplication.ServiceReference1.ConnectResponse> connectAsync(string address);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpinjControlService/startInventory", ReplyAction="http://tempuri.org/IImpinjControlService/startInventoryResponse")]
        void startInventory(RFIDIntegratedApplication.ServiceReference1.AntennaConfiguration antennaConfiguration, RFIDIntegratedApplication.ServiceReference1.ROReportSpec rOReportSpec);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpinjControlService/startInventory", ReplyAction="http://tempuri.org/IImpinjControlService/startInventoryResponse")]
        System.Threading.Tasks.Task startInventoryAsync(RFIDIntegratedApplication.ServiceReference1.AntennaConfiguration antennaConfiguration, RFIDIntegratedApplication.ServiceReference1.ROReportSpec rOReportSpec);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpinjControlService/updateEpc", ReplyAction="http://tempuri.org/IImpinjControlService/updateEpcResponse")]
        void updateEpc(string oldEpc, string newEpc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpinjControlService/updateEpc", ReplyAction="http://tempuri.org/IImpinjControlService/updateEpcResponse")]
        System.Threading.Tasks.Task updateEpcAsync(string oldEpc, string newEpc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpinjControlService/stopInventory", ReplyAction="http://tempuri.org/IImpinjControlService/stopInventoryResponse")]
        void stopInventory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpinjControlService/stopInventory", ReplyAction="http://tempuri.org/IImpinjControlService/stopInventoryResponse")]
        System.Threading.Tasks.Task stopInventoryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpinjControlService/tryDeque", ReplyAction="http://tempuri.org/IImpinjControlService/tryDequeResponse")]
        RFIDIntegratedApplication.ServiceReference1.TagInfo[] tryDeque();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpinjControlService/tryDeque", ReplyAction="http://tempuri.org/IImpinjControlService/tryDequeResponse")]
        System.Threading.Tasks.Task<RFIDIntegratedApplication.ServiceReference1.TagInfo[]> tryDequeAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpinjControlService/disconnect", ReplyAction="http://tempuri.org/IImpinjControlService/disconnectResponse")]
        void disconnect();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IImpinjControlService/disconnect", ReplyAction="http://tempuri.org/IImpinjControlService/disconnectResponse")]
        System.Threading.Tasks.Task disconnectAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IImpinjControlServiceChannel : RFIDIntegratedApplication.ServiceReference1.IImpinjControlService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ImpinjControlServiceClient : System.ServiceModel.ClientBase<RFIDIntegratedApplication.ServiceReference1.IImpinjControlService>, RFIDIntegratedApplication.ServiceReference1.IImpinjControlService {
        
        public ImpinjControlServiceClient() {
        }
        
        public ImpinjControlServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ImpinjControlServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImpinjControlServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ImpinjControlServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public RFIDIntegratedApplication.ServiceReference1.ConnectResponse connect(string address) {
            return base.Channel.connect(address);
        }
        
        public System.Threading.Tasks.Task<RFIDIntegratedApplication.ServiceReference1.ConnectResponse> connectAsync(string address) {
            return base.Channel.connectAsync(address);
        }
        
        public void startInventory(RFIDIntegratedApplication.ServiceReference1.AntennaConfiguration antennaConfiguration, RFIDIntegratedApplication.ServiceReference1.ROReportSpec rOReportSpec) {
            base.Channel.startInventory(antennaConfiguration, rOReportSpec);
        }
        
        public System.Threading.Tasks.Task startInventoryAsync(RFIDIntegratedApplication.ServiceReference1.AntennaConfiguration antennaConfiguration, RFIDIntegratedApplication.ServiceReference1.ROReportSpec rOReportSpec) {
            return base.Channel.startInventoryAsync(antennaConfiguration, rOReportSpec);
        }
        
        public void updateEpc(string oldEpc, string newEpc) {
            base.Channel.updateEpc(oldEpc, newEpc);
        }
        
        public System.Threading.Tasks.Task updateEpcAsync(string oldEpc, string newEpc) {
            return base.Channel.updateEpcAsync(oldEpc, newEpc);
        }
        
        public void stopInventory() {
            base.Channel.stopInventory();
        }
        
        public System.Threading.Tasks.Task stopInventoryAsync() {
            return base.Channel.stopInventoryAsync();
        }
        
        public RFIDIntegratedApplication.ServiceReference1.TagInfo[] tryDeque() {
            return base.Channel.tryDeque();
        }
        
        public System.Threading.Tasks.Task<RFIDIntegratedApplication.ServiceReference1.TagInfo[]> tryDequeAsync() {
            return base.Channel.tryDequeAsync();
        }
        
        public void disconnect() {
            base.Channel.disconnect();
        }
        
        public System.Threading.Tasks.Task disconnectAsync() {
            return base.Channel.disconnectAsync();
        }
    }
}
